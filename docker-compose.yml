services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:16-alpine
    container_name: web-scrapper-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-web_scrapper}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres_data:/var/lib/postgresql/data

  # API Backend
  backend:
    build:
      context: ./api
      dockerfile: Dockerfile
    image: web-scrapper-api:latest
    container_name: web-scrapper-api
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./audios:/app/audios
    depends_on:
      - postgres

  # Cliente Frontend
  client:
    image: nginx:stable-alpine3.19-slim
    container_name: web-scrapper-client
    restart: unless-stopped
    ports:
      - "${CLIENT_PORT}:80"
    volumes:
      - ./client/dist:/usr/share/nginx/html
      - ./client/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend

